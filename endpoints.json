{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an object containing the data of the specified ID",
    "queries": [],
    "exampleResponse": {
      "article": {
        "title": "Living in the shadow of a great man",
        "topic": "mitch",
        "author": "butter_bridge",
        "body": "I find this existence challenging",
        "created_at": 1594329060000,
        "votes": 100,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of all comments of a specific article_id, ordered by a default of DESC on the created_at value.",
    "queries": ["article_id"],
    "example_response": [{
      "body": "The beautiful thing about treasure is that it exists. Got to find out what kind of sheets these are; not cotton, not rayon, silky.",
      "votes": 14,
      "author": "butter_bridge",
      "article_id": 1,
      "created_at": 1604113380000
    }, 
    {
      "body": "I hate streaming noses",
      "votes": 0,
      "author": "icellusedkars",
      "article_id": 1,
      "created_at": 1604437200000
    }]
  },
  "POST /api/articles/:article_id/comments": {
    "description": "takes an input of a new comment object with two key value pairs of user and body. It will search the user folder to see if the user posting in the input is a valid user, and will then post it to the comments database for that article_id given",
    "queries": ["article_id", "new_comment"],
    "example_response": {
      "body": "I hate streaming noses",
      "votes": 0,
      "author": "icellusedkars",
      "article_id": 1,
      "created_at": 1604437200000
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "takes an input of a new vote count as an object, searches for an article with a specific ID, and will update the votes on the article with the amount on the new vote count object",
    "queries": ["article_id", "newVotes"],
    "example_response": {
      "body": "I hate streaming noses",
      "votes": 25,
      "author": "icellusedkars",
      "article_id": 1,
      "created_at": 1604437200000
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "takes an input of a comment ID and will delete the comment with the same ID if present in the database",
    "queries": [],
    "example_response": {}
  }
}
